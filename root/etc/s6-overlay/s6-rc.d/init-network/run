#!/usr/bin/with-contenv bash
# shellcheck shell=bash

if ! iptables -L > /dev/null 2>&1; then
	error "iptables is not functional. Ensure your container config adds --cap-add=NET_RAW"
fi

iptables -F
iptables -X

info "Starting firewall"
iptables -P INPUT DROP
iptables -P FORWARD DROP
iptables -P OUTPUT DROP

info "Enabling connection to secure interfaces"
iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
iptables -A FORWARD -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
iptables -A OUTPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT

iptables -A INPUT -i lo -j ACCEPT
iptables -A FORWARD -i lo -j ACCEPT
iptables -A OUTPUT -o lo -j ACCEPT

iptables -A INPUT -i wg+ -j ACCEPT
#iptables -A FORWARD -i wg+ -j ACCEPT
iptables -t nat -A POSTROUTING -o wg+ -j MASQUERADE
iptables -A OUTPUT -o wg+ -j ACCEPT

port="$(cat /config/wireguard/wg0.conf | grep Endpoint | cut -d ' ' -f3 | cut -d: -f2)"
ip="$(cat /config/wireguard/wg0.conf | grep Endpoint | cut -d ' ' -f3 | cut -d: -f1)"
info "Enabling connection to VPN server (${ip}:${port})"
iptables -A OUTPUT -p udp -m udp --dport "${port}" -d "${ip}" -j ACCEPT

ifaces=($(ip link | awk -F': ' '$0 !~ "lo|wg|tun|tap|^[^0-9]"{print $2;getline}' | cut -d@ -f1))
for iface in "${ifaces[@]}"; do
	net="$(ip -o addr show dev "${iface}" | awk '$3 == "inet" {print $4}')"
	if [[ -n ${net} ]]; then
		info "Enabling connection to network ${net} on ${iface}"
		iptables -A INPUT -i "${iface}" -s "${net}" -j ACCEPT
		iptables -A OUTPUT -o "${iface}" -d "${net}" -j ACCEPT
		iptables -A FORWARD -i "${iface}" -d "${net}" -j ACCEPT
		iptables -A FORWARD -i "${iface}" -s "${net}" -j ACCEPT
	else
		info "Skipping interface ${iface} with no IP address"
	fi

	if [ -n "${NET_LOCAL}" ]; then
		gw="$(ip route | grep "${iface}" | awk '/default/{print $3}')"
		if [[ -n ${gw} ]]; then
			for net in ${NET_LOCAL//[;,]/ }; do
				info "Enabling connection to network ${net} via ${gw} on ${iface}"
				ip route | grep -q "${net}" || ip route add "${net}" via "$gw" dev "${iface}"
				iptables -A INPUT -i "${iface}" -s "${net}" -j ACCEPT
				iptables -A OUTPUT -o "${iface}" -d "${net}" -j ACCEPT
				iptables -A FORWARD -i "${iface}" -d "${net}" -j ACCEPT
				iptables -A FORWARD -i "${iface}" -s "${net}" -j ACCEPT
			done
		else
			info "Skipping interface ${iface} with no default route"
		fi
	fi
done
